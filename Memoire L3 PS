
##Simulation d'une loi exponentielle
Sim_loi_exp=function(n,lambda) # n la taille de l'echantillon , lambda une valeur pour le parametre de la loi exponentielle 
{
  
  u=runif(n,0,1) # simulation d'un echantillon d'une loi uniforme
  x=-log(u)/lambda # simulation d'un echantillon de la loi exponentielle 
   
  return(x)
  
  
}
 
# exemple 1:
n=1000 # taille très petite pour une loi continue
lambda=5
Y=Sim_loi_exp(n,lambda)
# calcul de la variance empirique
var(Y) 
# calcul de la moyenne emirique
mean(Y) 
# avoir la discription statistique de l'echantillon  
summary(Y)
# representation graphique :

hist(Y,freq = F, main = "simulation d'une loi exponentielle", col = "lightblue")
curve(dexp(x,lambda),add=T,col="red") 


##TP2:SIMULATION D'UNE LOI NORMAL.
#Qestion 1
##Simulation d'une loi Normale
Sim_Loi_norm=function(n,m,sigma) # n:la taille de l'echantillon ,m= la moyenne,sigma=l'écart type.
  {
  u1 = runif(n) # simulation d'un ehantillon de la loi uniforme 
  u2 =runif(n)  # simulation d'un echantillon de la loi uniforme 
  r2=Sim_loi_exp(n,1/2) # simulation d'un echentillon de la loi exponontielle de paramêtre lambda=1/2
  Z1=sqrt(r2) * cos(2*pi*u2)#
  Z2=sqrt(r2) * sin(2*pi*u2)
  X=m+sigma*c(Z1,Z2) #deduire un echantillon de la loi normale  

  return(X)
}
##Question 2

  ##L'histogramme de la loi normal + la suporposition de la densité de la loi normal de même paramêtres
  D=Sim_Loi_norm(1000,10,2) ## n=1000 m=10 sigma=2
  hist(D, col="thistle4" , proba=TRUE ,main=" N(m=10,sigma=2) ") ## L'histogramme de l echantillon # il faut choisir une bonne échelle pour le graphique car il n'apparait pas bien
 curve(dnorm(x,10,2), add = TRUE) ## trace la densite de la loi normale N(m=10,sigma=2) 
#Question 3
# Tester la normalité de l'echantillon simulé
m=10
sigma=2
Test_ks=ks.test(D,"pnorm",mean=m,sd=sigma)  
pvalue=Test_ks$p.value
pvalue
#Question4  
# le code affichant 1 si le test accepte la normalité et 0 sinon
Test_Nor=function(Pvalue,alpha)
{
H=NULL
if(Pvalue>alpha)
{H=1}
else{H=0}
return(H)
}
  ##Question 5
# Simulation de 1000 echantillons de taille 20 et compter
  n=20 
 m=0
sigma=1
S=0
alpha=0.05
pvalue=vector("logical",1000)
for(i in 1:1000) { 
  x=Sim_Loi_norm(20,0,1)
  Test_ks=ks.test(x,"pnorm",mean=0,sd=1)
  
  pvalue[i]=Test_ks$p.value
  He=Test_Nor(pvalue[i],alpha)#tester normalite 
  S=He+S

}
Prop=S/1000
#Qusetion 6 
# Simulation de 1000 echantillons de tailles 100 et comter la proportion de fois que le test a accépté la normalité
n=100
m=0
sigma=1
S=0
alpha=0.05
pvalue=vector("logical",1000)
for(i in 1:1000)
{ Sim_Loi_norm(100,0,1)
Test_ks=ks.test(x,"pnorm",mean=0,sd=sqrt(1))
pvalue[i]=Test_ks$p.value
He=Test_Nor(pvalue[i],alpha)#Tester la normalité 
S=He+S
}
S
Prop=S/1000
Prop
              

   
